//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace SqliteManagerWcfServiceTest.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/SqliteManagerWcfService")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommentDataModel", Namespace="http://schemas.datacontract.org/2004/07/SqliteManagerWcfService.Model")]
    [System.SerializableAttribute()]
    public partial class CommentDataModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiggCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShareUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SignatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommentText {
            get {
                return this.CommentTextField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentTextField, value) != true)) {
                    this.CommentTextField = value;
                    this.RaisePropertyChanged("CommentText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.CreateTimeField, value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DiggCount {
            get {
                return this.DiggCountField;
            }
            set {
                if ((object.ReferenceEquals(this.DiggCountField, value) != true)) {
                    this.DiggCountField = value;
                    this.RaisePropertyChanged("DiggCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShareUrl {
            get {
                return this.ShareUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ShareUrlField, value) != true)) {
                    this.ShareUrlField = value;
                    this.RaisePropertyChanged("ShareUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortId {
            get {
                return this.ShortIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortIdField, value) != true)) {
                    this.ShortIdField = value;
                    this.RaisePropertyChanged("ShortId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Signature {
            get {
                return this.SignatureField;
            }
            set {
                if ((object.ReferenceEquals(this.SignatureField, value) != true)) {
                    this.SignatureField = value;
                    this.RaisePropertyChanged("Signature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpTime {
            get {
                return this.UpTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.UpTimeField, value) != true)) {
                    this.UpTimeField = value;
                    this.RaisePropertyChanged("UpTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ISqliteManagerWcfS")]
    public interface ISqliteManagerWcfS {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISqliteManagerWcfS/GetData", ReplyAction="http://tempuri.org/ISqliteManagerWcfS/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISqliteManagerWcfS/GetData", ReplyAction="http://tempuri.org/ISqliteManagerWcfS/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISqliteManagerWcfS/GetDataUsingDataContract", ReplyAction="http://tempuri.org/ISqliteManagerWcfS/GetDataUsingDataContractResponse")]
        SqliteManagerWcfServiceTest.ServiceReference1.CompositeType GetDataUsingDataContract(SqliteManagerWcfServiceTest.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISqliteManagerWcfS/GetDataUsingDataContract", ReplyAction="http://tempuri.org/ISqliteManagerWcfS/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<SqliteManagerWcfServiceTest.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(SqliteManagerWcfServiceTest.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISqliteManagerWcfS/GetCommentData", ReplyAction="http://tempuri.org/ISqliteManagerWcfS/GetCommentDataResponse")]
        SqliteManagerWcfServiceTest.ServiceReference1.CommentDataModel[] GetCommentData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISqliteManagerWcfS/GetCommentData", ReplyAction="http://tempuri.org/ISqliteManagerWcfS/GetCommentDataResponse")]
        System.Threading.Tasks.Task<SqliteManagerWcfServiceTest.ServiceReference1.CommentDataModel[]> GetCommentDataAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISqliteManagerWcfSChannel : SqliteManagerWcfServiceTest.ServiceReference1.ISqliteManagerWcfS, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SqliteManagerWcfSClient : System.ServiceModel.ClientBase<SqliteManagerWcfServiceTest.ServiceReference1.ISqliteManagerWcfS>, SqliteManagerWcfServiceTest.ServiceReference1.ISqliteManagerWcfS {
        
        public SqliteManagerWcfSClient() {
        }
        
        public SqliteManagerWcfSClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SqliteManagerWcfSClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SqliteManagerWcfSClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SqliteManagerWcfSClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public SqliteManagerWcfServiceTest.ServiceReference1.CompositeType GetDataUsingDataContract(SqliteManagerWcfServiceTest.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<SqliteManagerWcfServiceTest.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(SqliteManagerWcfServiceTest.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public SqliteManagerWcfServiceTest.ServiceReference1.CommentDataModel[] GetCommentData() {
            return base.Channel.GetCommentData();
        }
        
        public System.Threading.Tasks.Task<SqliteManagerWcfServiceTest.ServiceReference1.CommentDataModel[]> GetCommentDataAsync() {
            return base.Channel.GetCommentDataAsync();
        }
    }
}
